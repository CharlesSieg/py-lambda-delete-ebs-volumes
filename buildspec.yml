version: 0.2
phases:
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - REPOSITORY_URI=$DEPLOYMENTS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - docker build --cache-from $REPOSITORY_URI:latest --tag $REPOSITORY_URI:latest .
  post_build:
    commands:
      - echo Logging in to Amazon ECR and Docker...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $DEPLOYMENTS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - echo Build completed on `date`
      # Switch accounts
      - echo Switching to role in other account to call Lambda update...
      - eval $(aws sts assume-role --role-arn arn:aws:iam::$DESTINATION_ACCOUNT_ID:role/$LAMBDA_NAME-codebuild-cross-account-role --role-session-name codebuild-session | jq -r '.Credentials | @sh "export AWS_SESSION_TOKEN=\(.SessionToken)\nexport AWS_ACCESS_KEY_ID=\(.AccessKeyId)\nexport AWS_SECRET_ACCESS_KEY=\(.SecretAccessKey) "')
      - echo Confirming new role...
      - aws sts get-caller-identity
      # Update lambda
      - aws lambda update-function-code --function-name $FUNCTION_NAME --image-uri $REPOSITORY_URI:latest
